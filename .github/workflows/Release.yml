name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-release:
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
      QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri
      - run: npm install
      - run: node script/ffmpeg.js ${{ github.event.release.tag_name }}
      - uses: tauri-apps/tauri-action@v0
      - run: node script/upload.js ${{ github.event.release.tag_name }}
      - name: Upload release (Windows)
        if: github.event.release.tag_name && matrix.platform == 'windows-latest'
        run: gh release upload ${{ github.event.release.tag_name }} src-tauri/target/release/bundle/msi/ave_${{ github.event.release.tag_name#v }}_x64_en-US.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release (macOS)
        if: github.event.release.tag_name && matrix.platform == 'macos-latest'
        run: gh release upload ${{ github.event.release.tag_name }} src-tauri/target/release/bundle/dmg/ave_${{ github.event.release.tag_name#v }}_x64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  updater:
    needs: build-release
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
      QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
      - run: npm install
      - run: node script/publish.js ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
